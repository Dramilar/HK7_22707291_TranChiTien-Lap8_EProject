name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  unit:
    name: Unit (${{ matrix.service }})
    runs-on: ubuntu-latest
    continue-on-error: true   # ✅ Không khóa pipeline khi test/integration chưa sẵn sàng
    strategy:
      fail-fast: false
      matrix:
        service: [auth, product, order, api-gateway]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            package-lock.json
            auth/package-lock.json
            product/package-lock.json
            order/package-lock.json
            api-gateway/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci || npm i

      - name: Lint (optional)
        working-directory: ${{ matrix.service }}
        shell: bash
        run: |
          if node -e "process.exit(!((require('./package.json').scripts||{}).lint))"; then
            echo '✅ Found "lint" script. Running...'
            npm run lint || echo '⚠️ Lint failed (non-blocking).'
          else
            echo 'ℹ️  No "lint" script. Skipping.'
          fi

      - name: Decide test mode (skip placeholder or missing)
        id: testmode
        working-directory: ${{ matrix.service }}
        shell: bash
        run: |
          node -e "
            const p=require('./package.json'); 
            const s=(p.scripts||{}).test||''; 
            const hasTest=!!s; 
            const isPlaceholder=/no test specified/i.test(s);
            console.log('hasTest=' + hasTest);
            console.log('isPlaceholder=' + isPlaceholder);
          " | tee testmeta.txt
          echo \"hasTest=$(grep -o 'hasTest=.*' testmeta.txt | cut -d= -f2)\" >> $GITHUB_OUTPUT
          echo \"isPlaceholder=$(grep -o 'isPlaceholder=.*' testmeta.txt | cut -d= -f2)\" >> $GITHUB_OUTPUT

      - name: Run unit tests (infra-safe)
        if: steps.testmode.outputs.hasTest == 'true' && steps.testmode.outputs.isPlaceholder != 'true'
        working-directory: ${{ matrix.service }}
        shell: bash
        env:
          INTEGRATION: "0"
          CI: "true"
        run: |
          # Nếu package.json gọi mocha mà chưa cài, cài tạm để tránh 'mocha: not found'
          TEST_SCRIPT=$(node -e "process.stdout.write(((require('./package.json').scripts||{}).test)||'')")
          if echo "$TEST_SCRIPT" | grep -qi "mocha"; then
            if ! npx --yes mocha --version >/dev/null 2>&1; then
              echo "ℹ️ Installing mocha/chai/sinon/supertest temporarily for CI..."
              npm i -D mocha@^10 chai@^4 sinon@^17 supertest@^6 || true
            fi
          fi

          echo "✅ Running tests: $TEST_SCRIPT"
          # Chạy test nhưng không khóa pipeline nếu fail do phụ thuộc hạ tầng
          set +e
          npm test
          STATUS=$?
          if [ $STATUS -ne 0 ]; then
            echo "⚠️ Tests failed (non-blocking for CI 0.5). Exit code: $STATUS"
          fi
          exit 0

      - name: Skip reason
        if: steps.testmode.outputs.hasTest != 'true' || steps.testmode.outputs.isPlaceholder == 'true'
        run: |
          echo "ℹ️ Skipping tests for service '${{ matrix.service }}':"
          if [ "${{ steps.testmode.outputs.hasTest }}" != "true" ]; then
            echo "   - No test script in package.json."
          fi
          if [ "${{ steps.testmode.outputs.isPlaceholder }}" = "true" ]; then
            echo "   - Placeholder test script ('no test specified')."
          fi
