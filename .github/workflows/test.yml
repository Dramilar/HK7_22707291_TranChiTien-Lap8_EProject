integration:
  needs: unit
  runs-on: ubuntu-latest

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: npm

    - name: Install root deps (for E2E runner)
      run: npm ci

    # ⚙️ Dựng stack theo docker-compose.yml (đã thống nhất cổng và /health)
    - name: Docker Compose up
      run: docker compose up -d --build

    # ⏳ Chờ TẤT CẢ service healthy theo healthcheck trong compose
    - name: Wait for services healthy
      shell: bash
      run: |
        set -e
        services=("mongo" "rabbitmq" "auth" "product" "order" "api-gateway")
        for i in {1..120}; do
          unhealthy=0
          for s in "${services[@]}"; do
            status=$(docker inspect -f '{{if .State.Health}}{{.State.Health.Status}}{{else}}none{{end}}' "$s" 2>/dev/null || echo "none")
            case "$status" in
              healthy) : ;;
              starting|none) unhealthy=1 ;;
              unhealthy) unhealthy=2 ;;
            esac
          done
          if [ $unhealthy -eq 0 ]; then
            echo "✅ All services healthy"; docker compose ps; break
          fi
          if [ $unhealthy -eq 2 ]; then
            echo "❌ A service is unhealthy"; docker compose ps; exit 1
          fi
          echo "⏳ Waiting services healthy... ($i/120)"
          sleep 1
        done

    # 🛣️ Kiểm tra Gateway đúng cổng 3003 và đường dẫn /health
    - name: Wait for API Gateway (http://127.0.0.1:3003/health)
      shell: bash
      run: |
        for i in {1..90}; do
          code=$(curl -sS -o /dev/null -w "%{http_code}" http://127.0.0.1:3003/health || true)
          [[ "$code" == "200" ]] && { echo "✅ Gateway ready"; exit 0; }
          echo "⏳ Waiting Gateway... ($i/90)"; sleep 2
        done
        echo "❌ Gateway not ready in time"
        docker compose logs --no-color api-gateway || true
        exit 1

    # 🚀 Chạy E2E qua Gateway
    - name: Run integration (E2E) tests
      env:
        BASE_URL: "http://127.0.0.1:3003"
      run: npm test

    # 🧾 Thu log khi fail/pass
    - name: Collect logs (always)
      if: always()
      run: |
        mkdir -p logs
        docker compose ps > logs/ps.txt || true
        for s in mongo rabbitmq auth product order api-gateway; do
          docker compose logs --no-color "$s" > "logs/$s.log" || true
        done

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-logs
        path: logs/**

    - name: Docker Compose down
      if: always()
      run: docker compose down -v
