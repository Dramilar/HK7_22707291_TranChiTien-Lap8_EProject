name: CD - Docker Build & Deploy (auto + GHCR & DockerHub)

on:
  push:
    branches: ["main"]          # ✅ Tự chạy khi push lên main
    tags:
      - "v*.*.*"                # ✅ Chạy khi đẩy tag vX.Y.Z
  workflow_dispatch:            # ✅ Chạy thủ công

env:
  REGISTRY_GHCR: ghcr.io
  SERVICES: "auth product order api-gateway"

jobs:
  build-and-push:
    name: Build & Push (GHCR + DockerHub)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # cho GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # ─────────────── Logins ───────────────
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ─────────────── Compute names/tags ───────────────
      - name: Compute image names (lowercase)
        id: names
        shell: bash
        run: |
          # GHCR prefix: ghcr.io/<owner>/<repo> (lowercase bắt buộc)
          GHCR_PREFIX="$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')"
          echo "ghcr_prefix=${GHCR_PREFIX}" >> $GITHUB_OUTPUT

          # Docker Hub: docker.io/<user>/<basename>-<service>
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "DOCKERHUB_USERNAME secret is missing" >&2
            exit 1
          fi
          HUB_USER="${{ secrets.DOCKERHUB_USERNAME }}"
          # Lấy basename của repo rồi sanitize về lowercase cho hợp lệ trên Hub
          BASENAME="$(echo "${GITHUB_REPOSITORY##*/}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_.-]/-/g')"
          echo "dockerhub_user=${HUB_USER}"       >> $GITHUB_OUTPUT
          echo "dockerhub_basename=${BASENAME}"   >> $GITHUB_OUTPUT

      - name: Decide version tag
        id: tag
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
            echo "extra=latest"               >> $GITHUB_OUTPUT
          else
            short_sha=$(echo "${GITHUB_SHA}" | cut -c1-7)
            echo "version=${short_sha}"       >> $GITHUB_OUTPUT
            echo "extra=latest"               >> $GITHUB_OUTPUT
          fi
          echo "Resolved tags: version=$(cat $GITHUB_OUTPUT | grep '^version=' | cut -d= -f2), extra=$(cat $GITHUB_OUTPUT | grep '^extra=' | cut -d= -f2)"

      # ─────────────── Build & Push per service (mirror 2 registries) ───────────────
      - name: Build & push per service
        shell: bash
        env:
          GHCR_PREFIX: ${{ steps.names.outputs.ghcr_prefix }}
          HUB_USER: ${{ steps.names.outputs.dockerhub_user }}
          BASENAME: ${{ steps.names.outputs.dockerhub_basename }}
          VERSION: ${{ steps.tag.outputs.version }}
          EXTRA_TAG: ${{ steps.tag.outputs.extra }}
          REGISTRY_GHCR: ${{ env.REGISTRY_GHCR }}
        run: |
          set -e
          echo "Will push tags: ${VERSION} and ${EXTRA_TAG}"
          for SVC in $SERVICES; do
            CONTEXT="$SVC"

            GHCR_IMAGE="${REGISTRY_GHCR}/${GHCR_PREFIX}/${SVC}"
            HUB_IMAGE="docker.io/${HUB_USER}/${BASENAME}-${SVC}"

            echo "🛠 Building:"
            echo " - ${GHCR_IMAGE}:${VERSION}"
            echo " - ${GHCR_IMAGE}:${EXTRA_TAG}"
            echo " - ${HUB_IMAGE}:${VERSION}"
            echo " - ${HUB_IMAGE}:${EXTRA_TAG}"

            docker buildx build \
              --platform linux/amd64 \
              -f "${CONTEXT}/Dockerfile" "${CONTEXT}" \
              -t "${GHCR_IMAGE}:${VERSION}" \
              -t "${GHCR_IMAGE}:${EXTRA_TAG}" \
              -t "${HUB_IMAGE}:${VERSION}" \
              -t "${HUB_IMAGE}:${EXTRA_TAG}" \
              --push
          done

  deploy:
    name: Deploy via SSH (docker compose)
    needs: build-and-push
    # ĐÃ VÔ HIỆU HÓA: Thay thế điều kiện phức tạp hiện tại bằng 'if: false'
    if: false 
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            # Server của bạn nên dùng image GHCR hoặc DockerHub (chọn 1)
            # Nếu đang dùng GHCR trong docker-compose.yml thì lệnh sau sẽ kéo GHCR:
            docker compose pull
            docker compose up -d
            for i in {1..30}; do
              if curl -fsS http://localhost:3003 >/dev/null 2>&1; then
                echo "✅ Gateway is up."
                break
              else
                echo "⏳ Waiting gateway... ($i/30)"
                sleep 3
              fi
            done
            docker image prune -f